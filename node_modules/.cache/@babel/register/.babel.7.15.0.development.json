{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/alexis/perso/apiEasyooking/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alexis/perso/apiEasyooking\",\"filename\":\"/home/alexis/perso/apiEasyooking/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alexis/perso/apiEasyooking\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/alexis/perso/apiEasyooking/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/alexis/perso/apiEasyooking",
      "filename": "/home/alexis/perso/apiEasyooking/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/alexis/perso/apiEasyooking",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/alexis/perso/apiEasyooking/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/alexis/perso/apiEasyooking/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/alexis/perso/apiEasyooking/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "var createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\n\nvar usersRouter = require('./routes/users');\n\nvar sessionRouter = require('./routes/session');\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/', indexRouter);\napp.use('/user', usersRouter);\napp.use('/session', sessionRouter); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImluZGV4Um91dGVyIiwidXNlcnNSb3V0ZXIiLCJzZXNzaW9uUm91dGVyIiwiYXBwIiwic2V0Iiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyIiwibG9jYWxzIiwibWVzc2FnZSIsImVycm9yIiwiZ2V0Iiwic3RhdHVzIiwicmVuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlFLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUcsWUFBWSxHQUFHSCxPQUFPLENBQUMsZUFBRCxDQUExQjs7QUFDQSxJQUFJSSxNQUFNLEdBQUdKLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUVBLElBQUlLLFdBQVcsR0FBR0wsT0FBTyxDQUFDLGdCQUFELENBQXpCOztBQUNBLElBQUlNLFdBQVcsR0FBR04sT0FBTyxDQUFDLGdCQUFELENBQXpCOztBQUNBLElBQUlPLGFBQWEsR0FBR1AsT0FBTyxDQUFDLGtCQUFELENBQTNCOztBQUVBLElBQUlRLEdBQUcsR0FBR1AsT0FBTyxFQUFqQixDLENBRUE7O0FBQ0FPLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE9BQVIsRUFBaUJQLElBQUksQ0FBQ1EsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE9BQXJCLENBQWpCO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGFBQVIsRUFBdUIsTUFBdkI7QUFFQUQsR0FBRyxDQUFDSSxHQUFKLENBQVFSLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQUksR0FBRyxDQUFDSSxHQUFKLENBQVFYLE9BQU8sQ0FBQ1ksSUFBUixFQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWCxPQUFPLENBQUNhLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUVQsWUFBWSxFQUFwQjtBQUNBSyxHQUFHLENBQUNJLEdBQUosQ0FBUVgsT0FBTyxDQUFDZSxNQUFSLENBQWVkLElBQUksQ0FBQ1EsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUjtBQUVBSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxHQUFSLEVBQWFQLFdBQWI7QUFDQUcsR0FBRyxDQUFDSSxHQUFKLENBQVEsT0FBUixFQUFpQk4sV0FBakI7QUFDQUUsR0FBRyxDQUFDSSxHQUFKLENBQVEsVUFBUixFQUFvQkwsYUFBcEIsRSxDQUVBOztBQUNBQyxHQUFHLENBQUNJLEdBQUosQ0FBUSxVQUFTSyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQy9CQSxFQUFBQSxJQUFJLENBQUNwQixXQUFXLENBQUMsR0FBRCxDQUFaLENBQUo7QUFDRCxDQUZELEUsQ0FJQTs7QUFDQVMsR0FBRyxDQUFDSSxHQUFKLENBQVEsVUFBU1EsR0FBVCxFQUFjSCxHQUFkLEVBQW1CQyxHQUFuQixFQUF3QkMsSUFBeEIsRUFBOEI7QUFDcEM7QUFDQUQsRUFBQUEsR0FBRyxDQUFDRyxNQUFKLENBQVdDLE9BQVgsR0FBcUJGLEdBQUcsQ0FBQ0UsT0FBekI7QUFDQUosRUFBQUEsR0FBRyxDQUFDRyxNQUFKLENBQVdFLEtBQVgsR0FBbUJOLEdBQUcsQ0FBQ1QsR0FBSixDQUFRZ0IsR0FBUixDQUFZLEtBQVosTUFBdUIsYUFBdkIsR0FBdUNKLEdBQXZDLEdBQTZDLEVBQWhFLENBSG9DLENBS3BDOztBQUNBRixFQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBV0wsR0FBRyxDQUFDSyxNQUFKLElBQWMsR0FBekI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsT0FBWDtBQUNELENBUkQ7QUFVQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCcEIsR0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWxleGlzL3BlcnNvL2FwaUVhc3lvb2tpbmcvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnaHR0cC1lcnJvcnMnKTtcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xuXG52YXIgaW5kZXhSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9pbmRleCcpO1xudmFyIHVzZXJzUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKTtcbnZhciBzZXNzaW9uUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvc2Vzc2lvbicpO1xuXG52YXIgYXBwID0gZXhwcmVzcygpO1xuXG4vLyB2aWV3IGVuZ2luZSBzZXR1cFxuYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdqYWRlJyk7XG5cbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcblxuYXBwLnVzZSgnLycsIGluZGV4Um91dGVyKTtcbmFwcC51c2UoJy91c2VyJywgdXNlcnNSb3V0ZXIpO1xuYXBwLnVzZSgnL3Nlc3Npb24nLCBzZXNzaW9uUm91dGVyKTtcblxuLy8gY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgbmV4dChjcmVhdGVFcnJvcig0MDQpKTtcbn0pO1xuXG4vLyBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcbiAgcmVzLmxvY2Fscy5tZXNzYWdlID0gZXJyLm1lc3NhZ2U7XG4gIHJlcy5sb2NhbHMuZXJyb3IgPSByZXEuYXBwLmdldCgnZW52JykgPT09ICdkZXZlbG9wbWVudCcgPyBlcnIgOiB7fTtcblxuICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzIHx8IDUwMCk7XG4gIHJlcy5yZW5kZXIoJ2Vycm9yJyk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "indexRouter",
        "usersRouter",
        "sessionRouter",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,kBAAD,CAA3B;;AAEA,IAAIQ,GAAG,GAAGP,OAAO,EAAjB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AAEAD,GAAG,CAACI,GAAJ,CAAQR,MAAM,CAAC,KAAD,CAAd;AACAI,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACa,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQT,YAAY,EAApB;AACAK,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACe,MAAR,CAAed,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaP,WAAb;AACAG,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBN,WAAjB;AACAE,GAAG,CAACI,GAAJ,CAAQ,UAAR,EAAoBL,aAApB,E,CAEA;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACpB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAS,GAAG,CAACI,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACT,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBpB,GAAjB",
      "sourceRoot": "/home/alexis/perso/apiEasyooking/",
      "sourcesContent": [
        "var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar sessionRouter = require('./routes/session');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/user', usersRouter);\napp.use('/session', sessionRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630163255313
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/alexis/perso/apiEasyooking/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alexis/perso/apiEasyooking\",\"filename\":\"/home/alexis/perso/apiEasyooking/routes/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alexis/perso/apiEasyooking\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/alexis/perso/apiEasyooking",
      "filename": "/home/alexis/perso/apiEasyooking/routes/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/alexis/perso/apiEasyooking",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/alexis/perso/apiEasyooking/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/alexis/perso/apiEasyooking/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Express'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiO0FBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUU7QUFBVCxHQUFwQjtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbGV4aXMvcGVyc28vYXBpRWFzeW9va2luZy9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLyogR0VUIGhvbWUgcGFnZS4gKi9cbnJvdXRlci5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICByZXMucmVuZGVyKCdpbmRleCcsIHsgdGl0bGU6ICdFeHByZXNzJyB9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630141014709
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/alexis/perso/apiEasyooking/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alexis/perso/apiEasyooking\",\"filename\":\"/home/alexis/perso/apiEasyooking/routes/users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alexis/perso/apiEasyooking\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/alexis/perso/apiEasyooking",
      "filename": "/home/alexis/perso/apiEasyooking/routes/users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/alexis/perso/apiEasyooking",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/alexis/perso/apiEasyooking/routes/users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/alexis/perso/apiEasyooking/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst {\n  generateAccessToken,\n  authenticateToken\n} = require('../middlewares/authentication.js');\n\nconst {\n  query\n} = require('../query/query.js');\n/* Creating a new user. */\n\n\nrouter.post('/', function (req, res, next) {\n  const {\n    firstname,\n    lastname,\n    email,\n    password\n  } = req.body;\n  query('INSERT INTO public.\"User\"(firstname, lastname, email, password) values ($1, $2, $3, $4) RETURNING id', [firstname, lastname, email, password]).then(queryResponse => {\n    const token = generateAccessToken({\n      firstname: req.body.firstname,\n      lastname: req.body.lastname,\n      email: req.body.email,\n      id: queryResponse.rows[0].id\n    });\n    res.json({\n      token,\n      firstname,\n      lastname,\n      email,\n      id: queryResponse.rows[0].id\n    });\n  }).catch(err => {\n    res.json({\n      err\n    });\n  });\n});\n/* Login to my account. */\n\nrouter.get('/login', function (req, res, next) {\n  const {\n    email,\n    password\n  } = req.body;\n  query(`SELECT * FROM public.\"User\" where email='${email}' and password='${password}'`, []).then(queryResponse => {\n    const {\n      firstname,\n      lastname,\n      id,\n      email\n    } = queryResponse.rows[0];\n    const token = generateAccessToken({\n      firstname,\n      lastname,\n      email,\n      id\n    });\n    res.json({\n      token,\n      firstname,\n      lastname,\n      email,\n      id\n    });\n  }).catch(err => {\n    res.json({\n      err\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2VuZXJhdGVBY2Nlc3NUb2tlbiIsImF1dGhlbnRpY2F0ZVRva2VuIiwicXVlcnkiLCJwb3N0IiwicmVxIiwicmVzIiwibmV4dCIsImZpcnN0bmFtZSIsImxhc3RuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsImJvZHkiLCJ0aGVuIiwicXVlcnlSZXNwb25zZSIsInRva2VuIiwiaWQiLCJyb3dzIiwianNvbiIsImNhdGNoIiwiZXJyIiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFiOztBQUVBLE1BQU07QUFBRUMsRUFBQUEsbUJBQUY7QUFBdUJDLEVBQUFBO0FBQXZCLElBQTZDSixPQUFPLENBQUMsa0NBQUQsQ0FBMUQ7O0FBQ0EsTUFBTTtBQUFFSyxFQUFBQTtBQUFGLElBQVlMLE9BQU8sQ0FBQyxtQkFBRCxDQUF6QjtBQUVBOzs7QUFDQUMsTUFBTSxDQUFDSyxJQUFQLENBQVksR0FBWixFQUFpQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3hDLFFBQU07QUFBRUMsSUFBQUEsU0FBRjtBQUFhQyxJQUFBQSxRQUFiO0FBQXVCQyxJQUFBQSxLQUF2QjtBQUE4QkMsSUFBQUE7QUFBOUIsTUFBMkNOLEdBQUcsQ0FBQ08sSUFBckQ7QUFFQVQsRUFBQUEsS0FBSyxDQUNILHNHQURHLEVBRUgsQ0FBQ0ssU0FBRCxFQUFZQyxRQUFaLEVBQXNCQyxLQUF0QixFQUE2QkMsUUFBN0IsQ0FGRyxDQUFMLENBR0lFLElBSEosQ0FHU0MsYUFBYSxJQUFJO0FBQ3RCLFVBQU1DLEtBQUssR0FBR2QsbUJBQW1CLENBQUM7QUFDaENPLE1BQUFBLFNBQVMsRUFBRUgsR0FBRyxDQUFDTyxJQUFKLENBQVNKLFNBRFk7QUFFaENDLE1BQUFBLFFBQVEsRUFBRUosR0FBRyxDQUFDTyxJQUFKLENBQVNILFFBRmE7QUFHaENDLE1BQUFBLEtBQUssRUFBRUwsR0FBRyxDQUFDTyxJQUFKLENBQVNGLEtBSGdCO0FBSWhDTSxNQUFBQSxFQUFFLEVBQUVGLGFBQWEsQ0FBQ0csSUFBZCxDQUFtQixDQUFuQixFQUFzQkQ7QUFKTSxLQUFELENBQWpDO0FBT0FWLElBQUFBLEdBQUcsQ0FBQ1ksSUFBSixDQUFTO0FBQUNILE1BQUFBLEtBQUQ7QUFBUVAsTUFBQUEsU0FBUjtBQUFtQkMsTUFBQUEsUUFBbkI7QUFBNkJDLE1BQUFBLEtBQTdCO0FBQW9DTSxNQUFBQSxFQUFFLEVBQUVGLGFBQWEsQ0FBQ0csSUFBZCxDQUFtQixDQUFuQixFQUFzQkQ7QUFBOUQsS0FBVDtBQUNELEdBWkgsRUFZS0csS0FaTCxDQVlXQyxHQUFHLElBQUk7QUFDZGQsSUFBQUEsR0FBRyxDQUFDWSxJQUFKLENBQVM7QUFBQ0UsTUFBQUE7QUFBRCxLQUFUO0FBQ0QsR0FkSDtBQWVELENBbEJEO0FBb0JBOztBQUNBckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFFBQVgsRUFBcUIsVUFBU2hCLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDNUMsUUFBTTtBQUFFRyxJQUFBQSxLQUFGO0FBQVNDLElBQUFBO0FBQVQsTUFBc0JOLEdBQUcsQ0FBQ08sSUFBaEM7QUFFQVQsRUFBQUEsS0FBSyxDQUNGLDRDQUEyQ08sS0FBTSxtQkFBa0JDLFFBQVMsR0FEMUUsRUFFSCxFQUZHLENBQUwsQ0FHSUUsSUFISixDQUdTQyxhQUFhLElBQUk7QUFDdEIsVUFBTTtBQUFDTixNQUFBQSxTQUFEO0FBQVlDLE1BQUFBLFFBQVo7QUFBc0JPLE1BQUFBLEVBQXRCO0FBQTBCTixNQUFBQTtBQUExQixRQUFtQ0ksYUFBYSxDQUFDRyxJQUFkLENBQW1CLENBQW5CLENBQXpDO0FBRUEsVUFBTUYsS0FBSyxHQUFHZCxtQkFBbUIsQ0FBQztBQUNoQ08sTUFBQUEsU0FEZ0M7QUFFaENDLE1BQUFBLFFBRmdDO0FBR2hDQyxNQUFBQSxLQUhnQztBQUloQ00sTUFBQUE7QUFKZ0MsS0FBRCxDQUFqQztBQU9BVixJQUFBQSxHQUFHLENBQUNZLElBQUosQ0FBUztBQUFDSCxNQUFBQSxLQUFEO0FBQVFQLE1BQUFBLFNBQVI7QUFBbUJDLE1BQUFBLFFBQW5CO0FBQTZCQyxNQUFBQSxLQUE3QjtBQUFvQ00sTUFBQUE7QUFBcEMsS0FBVDtBQUNELEdBZEgsRUFjS0csS0FkTCxDQWNXQyxHQUFHLElBQUk7QUFDZGQsSUFBQUEsR0FBRyxDQUFDWSxJQUFKLENBQVM7QUFBQ0UsTUFBQUE7QUFBRCxLQUFUO0FBQ0QsR0FoQkg7QUFpQkQsQ0FwQkQ7QUFzQkFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnhCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FsZXhpcy9wZXJzby9hcGlFYXN5b29raW5nL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCB7IGdlbmVyYXRlQWNjZXNzVG9rZW4sIGF1dGhlbnRpY2F0ZVRva2VuIH0gPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlcy9hdXRoZW50aWNhdGlvbi5qcycpO1xuY29uc3QgeyBxdWVyeSB9ID0gcmVxdWlyZSgnLi4vcXVlcnkvcXVlcnkuanMnKTtcblxuLyogQ3JlYXRpbmcgYSBuZXcgdXNlci4gKi9cbnJvdXRlci5wb3N0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgY29uc3QgeyBmaXJzdG5hbWUsIGxhc3RuYW1lLCBlbWFpbCwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xuXG4gIHF1ZXJ5KFxuICAgICdJTlNFUlQgSU5UTyBwdWJsaWMuXCJVc2VyXCIoZmlyc3RuYW1lLCBsYXN0bmFtZSwgZW1haWwsIHBhc3N3b3JkKSB2YWx1ZXMgKCQxLCAkMiwgJDMsICQ0KSBSRVRVUk5JTkcgaWQnLFxuICAgIFtmaXJzdG5hbWUsIGxhc3RuYW1lLCBlbWFpbCwgcGFzc3dvcmRdXG4gICAgKS50aGVuKHF1ZXJ5UmVzcG9uc2UgPT4ge1xuICAgICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZUFjY2Vzc1Rva2VuKHtcbiAgICAgICAgZmlyc3RuYW1lOiByZXEuYm9keS5maXJzdG5hbWUsXG4gICAgICAgIGxhc3RuYW1lOiByZXEuYm9keS5sYXN0bmFtZSxcbiAgICAgICAgZW1haWw6IHJlcS5ib2R5LmVtYWlsLFxuICAgICAgICBpZDogcXVlcnlSZXNwb25zZS5yb3dzWzBdLmlkLFxuICAgICAgfSk7XG5cbiAgICAgIHJlcy5qc29uKHt0b2tlbiwgZmlyc3RuYW1lLCBsYXN0bmFtZSwgZW1haWwsIGlkOiBxdWVyeVJlc3BvbnNlLnJvd3NbMF0uaWR9KTtcbiAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgcmVzLmpzb24oe2Vycn0pO1xuICAgIH0pXG59KTtcblxuLyogTG9naW4gdG8gbXkgYWNjb3VudC4gKi9cbnJvdXRlci5nZXQoJy9sb2dpbicsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcblxuICBxdWVyeShcbiAgICBgU0VMRUNUICogRlJPTSBwdWJsaWMuXCJVc2VyXCIgd2hlcmUgZW1haWw9JyR7ZW1haWx9JyBhbmQgcGFzc3dvcmQ9JyR7cGFzc3dvcmR9J2AsXG4gICAgW11cbiAgICApLnRoZW4ocXVlcnlSZXNwb25zZSA9PiB7XG4gICAgICBjb25zdCB7Zmlyc3RuYW1lLCBsYXN0bmFtZSwgaWQsIGVtYWlsfSA9IHF1ZXJ5UmVzcG9uc2Uucm93c1swXTtcblxuICAgICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZUFjY2Vzc1Rva2VuKHtcbiAgICAgICAgZmlyc3RuYW1lLFxuICAgICAgICBsYXN0bmFtZSxcbiAgICAgICAgZW1haWwsXG4gICAgICAgIGlkLFxuICAgICAgfSk7XG5cbiAgICAgIHJlcy5qc29uKHt0b2tlbiwgZmlyc3RuYW1lLCBsYXN0bmFtZSwgZW1haWwsIGlkfSk7XG4gICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgIHJlcy5qc29uKHtlcnJ9KTtcbiAgICB9KVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "generateAccessToken",
        "authenticateToken",
        "query",
        "post",
        "req",
        "res",
        "next",
        "firstname",
        "lastname",
        "email",
        "password",
        "body",
        "then",
        "queryResponse",
        "token",
        "id",
        "rows",
        "json",
        "catch",
        "err",
        "get",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AAEA,MAAM;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,IAA6CJ,OAAO,CAAC,kCAAD,CAA1D;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAYL,OAAO,CAAC,mBAAD,CAAzB;AAEA;;;AACAC,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACxC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,MAA2CN,GAAG,CAACO,IAArD;AAEAT,EAAAA,KAAK,CACH,sGADG,EAEH,CAACK,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,QAA7B,CAFG,CAAL,CAGIE,IAHJ,CAGSC,aAAa,IAAI;AACtB,UAAMC,KAAK,GAAGd,mBAAmB,CAAC;AAChCO,MAAAA,SAAS,EAAEH,GAAG,CAACO,IAAJ,CAASJ,SADY;AAEhCC,MAAAA,QAAQ,EAAEJ,GAAG,CAACO,IAAJ,CAASH,QAFa;AAGhCC,MAAAA,KAAK,EAAEL,GAAG,CAACO,IAAJ,CAASF,KAHgB;AAIhCM,MAAAA,EAAE,EAAEF,aAAa,CAACG,IAAd,CAAmB,CAAnB,EAAsBD;AAJM,KAAD,CAAjC;AAOAV,IAAAA,GAAG,CAACY,IAAJ,CAAS;AAACH,MAAAA,KAAD;AAAQP,MAAAA,SAAR;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA,KAA7B;AAAoCM,MAAAA,EAAE,EAAEF,aAAa,CAACG,IAAd,CAAmB,CAAnB,EAAsBD;AAA9D,KAAT;AACD,GAZH,EAYKG,KAZL,CAYWC,GAAG,IAAI;AACdd,IAAAA,GAAG,CAACY,IAAJ,CAAS;AAACE,MAAAA;AAAD,KAAT;AACD,GAdH;AAeD,CAlBD;AAoBA;;AACArB,MAAM,CAACsB,GAAP,CAAW,QAAX,EAAqB,UAAShB,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5C,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBN,GAAG,CAACO,IAAhC;AAEAT,EAAAA,KAAK,CACF,4CAA2CO,KAAM,mBAAkBC,QAAS,GAD1E,EAEH,EAFG,CAAL,CAGIE,IAHJ,CAGSC,aAAa,IAAI;AACtB,UAAM;AAACN,MAAAA,SAAD;AAAYC,MAAAA,QAAZ;AAAsBO,MAAAA,EAAtB;AAA0BN,MAAAA;AAA1B,QAAmCI,aAAa,CAACG,IAAd,CAAmB,CAAnB,CAAzC;AAEA,UAAMF,KAAK,GAAGd,mBAAmB,CAAC;AAChCO,MAAAA,SADgC;AAEhCC,MAAAA,QAFgC;AAGhCC,MAAAA,KAHgC;AAIhCM,MAAAA;AAJgC,KAAD,CAAjC;AAOAV,IAAAA,GAAG,CAACY,IAAJ,CAAS;AAACH,MAAAA,KAAD;AAAQP,MAAAA,SAAR;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA,KAA7B;AAAoCM,MAAAA;AAApC,KAAT;AACD,GAdH,EAcKG,KAdL,CAcWC,GAAG,IAAI;AACdd,IAAAA,GAAG,CAACY,IAAJ,CAAS;AAACE,MAAAA;AAAD,KAAT;AACD,GAhBH;AAiBD,CApBD;AAsBAE,MAAM,CAACC,OAAP,GAAiBxB,MAAjB",
      "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\nconst { generateAccessToken, authenticateToken } = require('../middlewares/authentication.js');\nconst { query } = require('../query/query.js');\n\n/* Creating a new user. */\nrouter.post('/', function(req, res, next) {\n  const { firstname, lastname, email, password } = req.body;\n\n  query(\n    'INSERT INTO public.\"User\"(firstname, lastname, email, password) values ($1, $2, $3, $4) RETURNING id',\n    [firstname, lastname, email, password]\n    ).then(queryResponse => {\n      const token = generateAccessToken({\n        firstname: req.body.firstname,\n        lastname: req.body.lastname,\n        email: req.body.email,\n        id: queryResponse.rows[0].id,\n      });\n\n      res.json({token, firstname, lastname, email, id: queryResponse.rows[0].id});\n    }).catch(err => {\n      res.json({err});\n    })\n});\n\n/* Login to my account. */\nrouter.get('/login', function(req, res, next) {\n  const { email, password } = req.body;\n\n  query(\n    `SELECT * FROM public.\"User\" where email='${email}' and password='${password}'`,\n    []\n    ).then(queryResponse => {\n      const {firstname, lastname, id, email} = queryResponse.rows[0];\n\n      const token = generateAccessToken({\n        firstname,\n        lastname,\n        email,\n        id,\n      });\n\n      res.json({token, firstname, lastname, email, id});\n    }).catch(err => {\n      res.json({err});\n    })\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630166316637
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/alexis/perso/apiEasyooking/middlewares/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alexis/perso/apiEasyooking\",\"filename\":\"/home/alexis/perso/apiEasyooking/middlewares/authentication.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alexis/perso/apiEasyooking\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/alexis/perso/apiEasyooking/middlewares/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/alexis/perso/apiEasyooking",
      "filename": "/home/alexis/perso/apiEasyooking/middlewares/authentication.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/alexis/perso/apiEasyooking",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/alexis/perso/apiEasyooking/middlewares/authentication.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/alexis/perso/apiEasyooking/middlewares/authentication.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/alexis/perso/apiEasyooking/middlewares/",
        "sourceFileName": "authentication.js"
      }
    },
    "ast": null,
    "code": "const dotenv = require('dotenv');\n\nconst jwt = require('jsonwebtoken'); // get config vars\n\n\ndotenv.config();\n\nconst generateAccessToken = object => {\n  return jwt.sign(object, process.env.TOKEN_SECRET, {\n    expiresIn: '2 days'\n  });\n};\n\nconst authenticateToken = (req, res, next) => {\n  const authHeader = req.headers['authorization']; // const token = authHeader && authHeader.split('.')[1]\n\n  if (authHeader == null) return res.sendStatus(401);\n  jwt.verify(authHeader, process.env.TOKEN_SECRET, (err, user) => {\n    if (err) return res.sendStatus(403);\n    req.user = user;\n    next();\n  });\n};\n\nmodule.exports = {\n  generateAccessToken,\n  authenticateToken\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0aW9uLmpzIl0sIm5hbWVzIjpbImRvdGVudiIsInJlcXVpcmUiLCJqd3QiLCJjb25maWciLCJnZW5lcmF0ZUFjY2Vzc1Rva2VuIiwib2JqZWN0Iiwic2lnbiIsInByb2Nlc3MiLCJlbnYiLCJUT0tFTl9TRUNSRVQiLCJleHBpcmVzSW4iLCJhdXRoZW50aWNhdGVUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJhdXRoSGVhZGVyIiwiaGVhZGVycyIsInNlbmRTdGF0dXMiLCJ2ZXJpZnkiLCJlcnIiLCJ1c2VyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxHQUFHLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQW5CLEMsQ0FFQTs7O0FBQ0FELE1BQU0sQ0FBQ0csTUFBUDs7QUFFQSxNQUFNQyxtQkFBbUIsR0FBR0MsTUFBTSxJQUFJO0FBQ3BDLFNBQU9ILEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxNQUFULEVBQWlCRSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsWUFBN0IsRUFBMkM7QUFBRUMsSUFBQUEsU0FBUyxFQUFFO0FBQWIsR0FBM0MsQ0FBUDtBQUNELENBRkQ7O0FBSUEsTUFBTUMsaUJBQWlCLEdBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDNUMsUUFBTUMsVUFBVSxHQUFHSCxHQUFHLENBQUNJLE9BQUosQ0FBWSxlQUFaLENBQW5CLENBRDRDLENBRTVDOztBQUVBLE1BQUlELFVBQVUsSUFBSSxJQUFsQixFQUF3QixPQUFPRixHQUFHLENBQUNJLFVBQUosQ0FBZSxHQUFmLENBQVA7QUFFeEJmLEVBQUFBLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0gsVUFBWCxFQUF1QlIsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFlBQW5DLEVBQWlELENBQUNVLEdBQUQsRUFBTUMsSUFBTixLQUFlO0FBRTlELFFBQUlELEdBQUosRUFBUyxPQUFPTixHQUFHLENBQUNJLFVBQUosQ0FBZSxHQUFmLENBQVA7QUFFVEwsSUFBQUEsR0FBRyxDQUFDUSxJQUFKLEdBQVdBLElBQVg7QUFFQU4sSUFBQUEsSUFBSTtBQUNMLEdBUEQ7QUFRRCxDQWREOztBQWdCQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZsQixFQUFBQSxtQkFEZTtBQUVmTyxFQUFBQTtBQUZlLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FsZXhpcy9wZXJzby9hcGlFYXN5b29raW5nL21pZGRsZXdhcmVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpO1xuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbi8vIGdldCBjb25maWcgdmFyc1xuZG90ZW52LmNvbmZpZygpO1xuXG5jb25zdCBnZW5lcmF0ZUFjY2Vzc1Rva2VuID0gb2JqZWN0ID0+IHtcbiAgcmV0dXJuIGp3dC5zaWduKG9iamVjdCwgcHJvY2Vzcy5lbnYuVE9LRU5fU0VDUkVULCB7IGV4cGlyZXNJbjogJzIgZGF5cycgfSk7XG59XG5cbmNvbnN0IGF1dGhlbnRpY2F0ZVRva2VuID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IGF1dGhIZWFkZXIgPSByZXEuaGVhZGVyc1snYXV0aG9yaXphdGlvbiddXG4gIC8vIGNvbnN0IHRva2VuID0gYXV0aEhlYWRlciAmJiBhdXRoSGVhZGVyLnNwbGl0KCcuJylbMV1cblxuICBpZiAoYXV0aEhlYWRlciA9PSBudWxsKSByZXR1cm4gcmVzLnNlbmRTdGF0dXMoNDAxKVxuXG4gIGp3dC52ZXJpZnkoYXV0aEhlYWRlciwgcHJvY2Vzcy5lbnYuVE9LRU5fU0VDUkVULCAoZXJyLCB1c2VyKSA9PiB7XG5cbiAgICBpZiAoZXJyKSByZXR1cm4gcmVzLnNlbmRTdGF0dXMoNDAzKVxuXG4gICAgcmVxLnVzZXIgPSB1c2VyXG5cbiAgICBuZXh0KClcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdlbmVyYXRlQWNjZXNzVG9rZW4sXG4gIGF1dGhlbnRpY2F0ZVRva2VuLFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "authentication.js"
      ],
      "names": [
        "dotenv",
        "require",
        "jwt",
        "config",
        "generateAccessToken",
        "object",
        "sign",
        "process",
        "env",
        "TOKEN_SECRET",
        "expiresIn",
        "authenticateToken",
        "req",
        "res",
        "next",
        "authHeader",
        "headers",
        "sendStatus",
        "verify",
        "err",
        "user",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB,C,CAEA;;;AACAD,MAAM,CAACG,MAAP;;AAEA,MAAMC,mBAAmB,GAAGC,MAAM,IAAI;AACpC,SAAOH,GAAG,CAACI,IAAJ,CAASD,MAAT,EAAiBE,OAAO,CAACC,GAAR,CAAYC,YAA7B,EAA2C;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3C,CAAP;AACD,CAFD;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC5C,QAAMC,UAAU,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAAnB,CAD4C,CAE5C;;AAEA,MAAID,UAAU,IAAI,IAAlB,EAAwB,OAAOF,GAAG,CAACI,UAAJ,CAAe,GAAf,CAAP;AAExBf,EAAAA,GAAG,CAACgB,MAAJ,CAAWH,UAAX,EAAuBR,OAAO,CAACC,GAAR,CAAYC,YAAnC,EAAiD,CAACU,GAAD,EAAMC,IAAN,KAAe;AAE9D,QAAID,GAAJ,EAAS,OAAON,GAAG,CAACI,UAAJ,CAAe,GAAf,CAAP;AAETL,IAAAA,GAAG,CAACQ,IAAJ,GAAWA,IAAX;AAEAN,IAAAA,IAAI;AACL,GAPD;AAQD,CAdD;;AAgBAO,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA,mBADe;AAEfO,EAAAA;AAFe,CAAjB",
      "sourceRoot": "/home/alexis/perso/apiEasyooking/middlewares/",
      "sourcesContent": [
        "const dotenv = require('dotenv');\nconst jwt = require('jsonwebtoken');\n\n// get config vars\ndotenv.config();\n\nconst generateAccessToken = object => {\n  return jwt.sign(object, process.env.TOKEN_SECRET, { expiresIn: '2 days' });\n}\n\nconst authenticateToken = (req, res, next) => {\n  const authHeader = req.headers['authorization']\n  // const token = authHeader && authHeader.split('.')[1]\n\n  if (authHeader == null) return res.sendStatus(401)\n\n  jwt.verify(authHeader, process.env.TOKEN_SECRET, (err, user) => {\n\n    if (err) return res.sendStatus(403)\n\n    req.user = user\n\n    next()\n  })\n}\n\nmodule.exports = {\n  generateAccessToken,\n  authenticateToken,\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1630163361773
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/alexis/perso/apiEasyooking/query/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alexis/perso/apiEasyooking\",\"filename\":\"/home/alexis/perso/apiEasyooking/query/query.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alexis/perso/apiEasyooking\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/alexis/perso/apiEasyooking/query/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/alexis/perso/apiEasyooking",
      "filename": "/home/alexis/perso/apiEasyooking/query/query.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/alexis/perso/apiEasyooking",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/alexis/perso/apiEasyooking/query/query.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/alexis/perso/apiEasyooking/query/query.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/alexis/perso/apiEasyooking/query/",
        "sourceFileName": "query.js"
      }
    },
    "ast": null,
    "code": "const {\n  Pool\n} = require('pg');\n\nconst dotenv = require('dotenv');\n\ndotenv.config();\nconst pool = new Pool();\nmodule.exports = {\n  async query(text, params) {\n    // invocation timestamp for the query method\n    const start = Date.now();\n\n    try {\n      const res = await pool.query(text, params); // time elapsed since invocation to execution\n\n      const duration = Date.now() - start;\n      console.log('executed query', {\n        text,\n        duration,\n        rows: res.rowCount\n      });\n      return res;\n    } catch (error) {\n      console.log('error in query', {\n        text\n      });\n      throw error;\n    }\n  }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXJ5LmpzIl0sIm5hbWVzIjpbIlBvb2wiLCJyZXF1aXJlIiwiZG90ZW52IiwiY29uZmlnIiwicG9vbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJxdWVyeSIsInRleHQiLCJwYXJhbXMiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJyZXMiLCJkdXJhdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJyb3dzIiwicm93Q291bnQiLCJlcnJvciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQVdDLE9BQU8sQ0FBQyxJQUFELENBQXhCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBRUFDLE1BQU0sQ0FBQ0MsTUFBUDtBQUVBLE1BQU1DLElBQUksR0FBRyxJQUFJSixJQUFKLEVBQWI7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2IsUUFBTUMsS0FBTixDQUFZQyxJQUFaLEVBQWtCQyxNQUFsQixFQUEwQjtBQUN0QjtBQUNBLFVBQU1DLEtBQUssR0FBR0MsSUFBSSxDQUFDQyxHQUFMLEVBQWQ7O0FBQ0EsUUFBSTtBQUNBLFlBQU1DLEdBQUcsR0FBRyxNQUFNVCxJQUFJLENBQUNHLEtBQUwsQ0FBV0MsSUFBWCxFQUFpQkMsTUFBakIsQ0FBbEIsQ0FEQSxDQUVBOztBQUNBLFlBQU1LLFFBQVEsR0FBR0gsSUFBSSxDQUFDQyxHQUFMLEtBQWFGLEtBQTlCO0FBQ0FLLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUNFLGdCQURGLEVBRUU7QUFBQ1IsUUFBQUEsSUFBRDtBQUFPTSxRQUFBQSxRQUFQO0FBQWlCRyxRQUFBQSxJQUFJLEVBQUVKLEdBQUcsQ0FBQ0s7QUFBM0IsT0FGRjtBQUlBLGFBQU9MLEdBQVA7QUFDSCxLQVRELENBU0UsT0FBT00sS0FBUCxFQUFjO0FBQ1pKLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaLEVBQThCO0FBQUNSLFFBQUFBO0FBQUQsT0FBOUI7QUFDQSxZQUFNVyxLQUFOO0FBQ0g7QUFDSjs7QUFqQlksQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWxleGlzL3BlcnNvL2FwaUVhc3lvb2tpbmcvcXVlcnkvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBQb29sIH0gPSByZXF1aXJlKCdwZycpO1xuY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3QgcG9vbCA9IG5ldyBQb29sKCk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGFzeW5jIHF1ZXJ5KHRleHQsIHBhcmFtcykge1xuICAgICAgICAvLyBpbnZvY2F0aW9uIHRpbWVzdGFtcCBmb3IgdGhlIHF1ZXJ5IG1ldGhvZFxuICAgICAgICBjb25zdCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBwb29sLnF1ZXJ5KHRleHQsIHBhcmFtcyk7XG4gICAgICAgICAgICAvLyB0aW1lIGVsYXBzZWQgc2luY2UgaW52b2NhdGlvbiB0byBleGVjdXRpb25cbiAgICAgICAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0O1xuICAgICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICAgICdleGVjdXRlZCBxdWVyeScsIFxuICAgICAgICAgICAgICB7dGV4dCwgZHVyYXRpb24sIHJvd3M6IHJlcy5yb3dDb3VudH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIGluIHF1ZXJ5Jywge3RleHR9KTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "query.js"
      ],
      "names": [
        "Pool",
        "require",
        "dotenv",
        "config",
        "pool",
        "module",
        "exports",
        "query",
        "text",
        "params",
        "start",
        "Date",
        "now",
        "res",
        "duration",
        "console",
        "log",
        "rows",
        "rowCount",
        "error"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAWC,OAAO,CAAC,IAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEAC,MAAM,CAACC,MAAP;AAEA,MAAMC,IAAI,GAAG,IAAIJ,IAAJ,EAAb;AAEAK,MAAM,CAACC,OAAP,GAAiB;AACb,QAAMC,KAAN,CAAYC,IAAZ,EAAkBC,MAAlB,EAA0B;AACtB;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAd;;AACA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMT,IAAI,CAACG,KAAL,CAAWC,IAAX,EAAiBC,MAAjB,CAAlB,CADA,CAEA;;AACA,YAAMK,QAAQ,GAAGH,IAAI,CAACC,GAAL,KAAaF,KAA9B;AACAK,MAAAA,OAAO,CAACC,GAAR,CACE,gBADF,EAEE;AAACR,QAAAA,IAAD;AAAOM,QAAAA,QAAP;AAAiBG,QAAAA,IAAI,EAAEJ,GAAG,CAACK;AAA3B,OAFF;AAIA,aAAOL,GAAP;AACH,KATD,CASE,OAAOM,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B;AAACR,QAAAA;AAAD,OAA9B;AACA,YAAMW,KAAN;AACH;AACJ;;AAjBY,CAAjB",
      "sourceRoot": "/home/alexis/perso/apiEasyooking/query/",
      "sourcesContent": [
        "const { Pool } = require('pg');\nconst dotenv = require('dotenv');\n\ndotenv.config();\n\nconst pool = new Pool();\n\nmodule.exports = {\n    async query(text, params) {\n        // invocation timestamp for the query method\n        const start = Date.now();\n        try {\n            const res = await pool.query(text, params);\n            // time elapsed since invocation to execution\n            const duration = Date.now() - start;\n            console.log(\n              'executed query', \n              {text, duration, rows: res.rowCount}\n            );\n            return res;\n        } catch (error) {\n            console.log('error in query', {text});\n            throw error;\n        }\n    }\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1630166306121
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/alexis/perso/apiEasyooking/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alexis/perso/apiEasyooking\",\"filename\":\"/home/alexis/perso/apiEasyooking/routes/session.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alexis/perso/apiEasyooking\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/alexis/perso/apiEasyooking",
      "filename": "/home/alexis/perso/apiEasyooking/routes/session.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/alexis/perso/apiEasyooking",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/alexis/perso/apiEasyooking/routes/session.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/alexis/perso/apiEasyooking/routes/session.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
        "sourceFileName": "session.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n\nconst {\n  authenticateToken\n} = require('../middlewares/authentication.js');\n\nconst {\n  query\n} = require('../query/query.js');\n/* Create new session. */\n\n\nrouter.post('/', authenticateToken, function (req, res, next) {\n  const {\n    id: user_id\n  } = req.user;\n  const {\n    name\n  } = req.body;\n  query(`INSERT INTO public.\"Session\"(name, settings, user_id) values ('${name}', '{}', ${user_id}) RETURNING id`, []).then(queryResponse => {\n    res.json({\n      id: queryResponse.rows[0].id\n    });\n  }).catch(err => {\n    res.json({\n      err\n    });\n  });\n});\n/* Update a session. */\n\nrouter.put('/', authenticateToken, async function (req, res, next) {\n  const {\n    id,\n    settings\n  } = req.body;\n  const {\n    id: user_id\n  } = req.user;\n  const sessionOwner = await query(`select user_id from public.\"Session\" where id=${id}`);\n\n  if (sessionOwner.rows[0].user_id !== user_id) {\n    res.json({\n      ko: 'notSessionOwner'\n    });\n  }\n\n  query(`UPDATE public.\"Session\" SET settings='${JSON.stringify(settings)}' where id=${id}`, []).then(() => {\n    res.json({\n      ok: true\n    });\n  }).catch(err => {\n    res.json({\n      err\n    });\n  });\n});\n/* Get my sessions. */\n\nrouter.get('/list', authenticateToken, function (req, res, next) {\n  const {\n    id,\n    settings\n  } = req.body;\n  const {\n    id: user_id\n  } = req.user;\n  query(`SELECT * FROM public.\"Session\" WHERE user_id=${user_id}`, []).then(queryResponse => {\n    res.json({\n      sessions: queryResponse.rows\n    });\n  }).catch(err => {\n    res.json({\n      err\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlc3Npb24uanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJhdXRoZW50aWNhdGVUb2tlbiIsInF1ZXJ5IiwicG9zdCIsInJlcSIsInJlcyIsIm5leHQiLCJpZCIsInVzZXJfaWQiLCJ1c2VyIiwibmFtZSIsImJvZHkiLCJ0aGVuIiwicXVlcnlSZXNwb25zZSIsImpzb24iLCJyb3dzIiwiY2F0Y2giLCJlcnIiLCJwdXQiLCJzZXR0aW5ncyIsInNlc3Npb25Pd25lciIsImtvIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiZ2V0Iiwic2Vzc2lvbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7O0FBRUEsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQXdCSCxPQUFPLENBQUMsa0NBQUQsQ0FBckM7O0FBQ0EsTUFBTTtBQUFFSSxFQUFBQTtBQUFGLElBQVlKLE9BQU8sQ0FBQyxtQkFBRCxDQUF6QjtBQUVBOzs7QUFDQUMsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQkYsaUJBQWpCLEVBQW9DLFVBQVNHLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDM0QsUUFBTTtBQUFFQyxJQUFBQSxFQUFFLEVBQUVDO0FBQU4sTUFBa0JKLEdBQUcsQ0FBQ0ssSUFBNUI7QUFDQSxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBV04sR0FBRyxDQUFDTyxJQUFyQjtBQUVBVCxFQUFBQSxLQUFLLENBQ0Ysa0VBQWlFUSxJQUFLLFlBQVdGLE9BQVEsZ0JBRHZGLEVBRUgsRUFGRyxDQUFMLENBR0lJLElBSEosQ0FHU0MsYUFBYSxJQUFJO0FBQ3RCUixJQUFBQSxHQUFHLENBQUNTLElBQUosQ0FBUztBQUFDUCxNQUFBQSxFQUFFLEVBQUVNLGFBQWEsQ0FBQ0UsSUFBZCxDQUFtQixDQUFuQixFQUFzQlI7QUFBM0IsS0FBVDtBQUNELEdBTEgsRUFLS1MsS0FMTCxDQUtXQyxHQUFHLElBQUk7QUFDZFosSUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVM7QUFBQ0csTUFBQUE7QUFBRCxLQUFUO0FBQ0QsR0FQSDtBQVFELENBWkQ7QUFjQTs7QUFDQWxCLE1BQU0sQ0FBQ21CLEdBQVAsQ0FBVyxHQUFYLEVBQWdCakIsaUJBQWhCLEVBQW1DLGdCQUFlRyxHQUFmLEVBQW9CQyxHQUFwQixFQUF5QkMsSUFBekIsRUFBK0I7QUFDaEUsUUFBTTtBQUFFQyxJQUFBQSxFQUFGO0FBQU1ZLElBQUFBO0FBQU4sTUFBbUJmLEdBQUcsQ0FBQ08sSUFBN0I7QUFDQSxRQUFNO0FBQUVKLElBQUFBLEVBQUUsRUFBRUM7QUFBTixNQUFrQkosR0FBRyxDQUFDSyxJQUE1QjtBQUVBLFFBQU1XLFlBQVksR0FBRyxNQUFNbEIsS0FBSyxDQUFFLGlEQUFnREssRUFBRyxFQUFyRCxDQUFoQzs7QUFFQSxNQUFHYSxZQUFZLENBQUNMLElBQWIsQ0FBa0IsQ0FBbEIsRUFBcUJQLE9BQXJCLEtBQWlDQSxPQUFwQyxFQUE2QztBQUMzQ0gsSUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVM7QUFBQ08sTUFBQUEsRUFBRSxFQUFFO0FBQUwsS0FBVDtBQUNEOztBQUVEbkIsRUFBQUEsS0FBSyxDQUNGLHlDQUF3Q29CLElBQUksQ0FBQ0MsU0FBTCxDQUFlSixRQUFmLENBQXlCLGNBQWFaLEVBQUcsRUFEL0UsRUFFSCxFQUZHLENBQUwsQ0FHSUssSUFISixDQUdTLE1BQU07QUFDWFAsSUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVM7QUFBQ1UsTUFBQUEsRUFBRSxFQUFFO0FBQUwsS0FBVDtBQUNELEdBTEgsRUFLS1IsS0FMTCxDQUtXQyxHQUFHLElBQUk7QUFDZFosSUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVM7QUFBQ0csTUFBQUE7QUFBRCxLQUFUO0FBQ0QsR0FQSDtBQVFELENBbEJEO0FBb0JBOztBQUNBbEIsTUFBTSxDQUFDMEIsR0FBUCxDQUFXLE9BQVgsRUFBb0J4QixpQkFBcEIsRUFBdUMsVUFBU0csR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUM5RCxRQUFNO0FBQUVDLElBQUFBLEVBQUY7QUFBTVksSUFBQUE7QUFBTixNQUFtQmYsR0FBRyxDQUFDTyxJQUE3QjtBQUNBLFFBQU07QUFBRUosSUFBQUEsRUFBRSxFQUFFQztBQUFOLE1BQWtCSixHQUFHLENBQUNLLElBQTVCO0FBRUFQLEVBQUFBLEtBQUssQ0FDRixnREFBK0NNLE9BQVEsRUFEckQsRUFFSCxFQUZHLENBQUwsQ0FHSUksSUFISixDQUdTQyxhQUFhLElBQUk7QUFDdEJSLElBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTO0FBQUNZLE1BQUFBLFFBQVEsRUFBRWIsYUFBYSxDQUFDRTtBQUF6QixLQUFUO0FBQ0QsR0FMSCxFQUtLQyxLQUxMLENBS1dDLEdBQUcsSUFBSTtBQUNkWixJQUFBQSxHQUFHLENBQUNTLElBQUosQ0FBUztBQUFDRyxNQUFBQTtBQUFELEtBQVQ7QUFDRCxHQVBIO0FBUUQsQ0FaRDtBQWNBVSxNQUFNLENBQUNDLE9BQVAsR0FBaUI3QixNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbGV4aXMvcGVyc28vYXBpRWFzeW9va2luZy9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgeyBhdXRoZW50aWNhdGVUb2tlbiB9ID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZXMvYXV0aGVudGljYXRpb24uanMnKTtcbmNvbnN0IHsgcXVlcnkgfSA9IHJlcXVpcmUoJy4uL3F1ZXJ5L3F1ZXJ5LmpzJyk7XG5cbi8qIENyZWF0ZSBuZXcgc2Vzc2lvbi4gKi9cbnJvdXRlci5wb3N0KCcvJywgYXV0aGVudGljYXRlVG9rZW4sIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGNvbnN0IHsgaWQ6IHVzZXJfaWQgfSA9IHJlcS51c2VyO1xuICBjb25zdCB7IG5hbWUgfSA9IHJlcS5ib2R5O1xuICBcbiAgcXVlcnkoXG4gICAgYElOU0VSVCBJTlRPIHB1YmxpYy5cIlNlc3Npb25cIihuYW1lLCBzZXR0aW5ncywgdXNlcl9pZCkgdmFsdWVzICgnJHtuYW1lfScsICd7fScsICR7dXNlcl9pZH0pIFJFVFVSTklORyBpZGAsXG4gICAgW11cbiAgICApLnRoZW4ocXVlcnlSZXNwb25zZSA9PiB7XG4gICAgICByZXMuanNvbih7aWQ6IHF1ZXJ5UmVzcG9uc2Uucm93c1swXS5pZH0pO1xuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICByZXMuanNvbih7ZXJyfSk7XG4gICAgfSlcbn0pO1xuXG4vKiBVcGRhdGUgYSBzZXNzaW9uLiAqL1xucm91dGVyLnB1dCgnLycsIGF1dGhlbnRpY2F0ZVRva2VuLCBhc3luYyBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBjb25zdCB7IGlkLCBzZXR0aW5ncyB9ID0gcmVxLmJvZHk7XG4gIGNvbnN0IHsgaWQ6IHVzZXJfaWQgfSA9IHJlcS51c2VyO1xuICBcbiAgY29uc3Qgc2Vzc2lvbk93bmVyID0gYXdhaXQgcXVlcnkoYHNlbGVjdCB1c2VyX2lkIGZyb20gcHVibGljLlwiU2Vzc2lvblwiIHdoZXJlIGlkPSR7aWR9YCk7XG5cbiAgaWYoc2Vzc2lvbk93bmVyLnJvd3NbMF0udXNlcl9pZCAhPT0gdXNlcl9pZCkge1xuICAgIHJlcy5qc29uKHtrbzogJ25vdFNlc3Npb25Pd25lcid9KTtcbiAgfVxuXG4gIHF1ZXJ5KFxuICAgIGBVUERBVEUgcHVibGljLlwiU2Vzc2lvblwiIFNFVCBzZXR0aW5ncz0nJHtKU09OLnN0cmluZ2lmeShzZXR0aW5ncyl9JyB3aGVyZSBpZD0ke2lkfWAsXG4gICAgW11cbiAgICApLnRoZW4oKCkgPT4ge1xuICAgICAgcmVzLmpzb24oe29rOiB0cnVlfSk7XG4gICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgIHJlcy5qc29uKHtlcnJ9KTtcbiAgICB9KVxufSk7XG5cbi8qIEdldCBteSBzZXNzaW9ucy4gKi9cbnJvdXRlci5nZXQoJy9saXN0JywgYXV0aGVudGljYXRlVG9rZW4sIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGNvbnN0IHsgaWQsIHNldHRpbmdzIH0gPSByZXEuYm9keTtcbiAgY29uc3QgeyBpZDogdXNlcl9pZCB9ID0gcmVxLnVzZXI7XG5cbiAgcXVlcnkoXG4gICAgYFNFTEVDVCAqIEZST00gcHVibGljLlwiU2Vzc2lvblwiIFdIRVJFIHVzZXJfaWQ9JHt1c2VyX2lkfWAsXG4gICAgW11cbiAgICApLnRoZW4ocXVlcnlSZXNwb25zZSA9PiB7XG4gICAgICByZXMuanNvbih7c2Vzc2lvbnM6IHF1ZXJ5UmVzcG9uc2Uucm93c30pO1xuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICByZXMuanNvbih7ZXJyfSk7XG4gICAgfSlcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "session.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "authenticateToken",
        "query",
        "post",
        "req",
        "res",
        "next",
        "id",
        "user_id",
        "user",
        "name",
        "body",
        "then",
        "queryResponse",
        "json",
        "rows",
        "catch",
        "err",
        "put",
        "settings",
        "sessionOwner",
        "ko",
        "JSON",
        "stringify",
        "ok",
        "get",
        "sessions",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAwBH,OAAO,CAAC,kCAAD,CAArC;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAYJ,OAAO,CAAC,mBAAD,CAAzB;AAEA;;;AACAC,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBF,iBAAjB,EAAoC,UAASG,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC3D,QAAM;AAAEC,IAAAA,EAAE,EAAEC;AAAN,MAAkBJ,GAAG,CAACK,IAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWN,GAAG,CAACO,IAArB;AAEAT,EAAAA,KAAK,CACF,kEAAiEQ,IAAK,YAAWF,OAAQ,gBADvF,EAEH,EAFG,CAAL,CAGII,IAHJ,CAGSC,aAAa,IAAI;AACtBR,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACP,MAAAA,EAAE,EAAEM,aAAa,CAACE,IAAd,CAAmB,CAAnB,EAAsBR;AAA3B,KAAT;AACD,GALH,EAKKS,KALL,CAKWC,GAAG,IAAI;AACdZ,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACG,MAAAA;AAAD,KAAT;AACD,GAPH;AAQD,CAZD;AAcA;;AACAlB,MAAM,CAACmB,GAAP,CAAW,GAAX,EAAgBjB,iBAAhB,EAAmC,gBAAeG,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAChE,QAAM;AAAEC,IAAAA,EAAF;AAAMY,IAAAA;AAAN,MAAmBf,GAAG,CAACO,IAA7B;AACA,QAAM;AAAEJ,IAAAA,EAAE,EAAEC;AAAN,MAAkBJ,GAAG,CAACK,IAA5B;AAEA,QAAMW,YAAY,GAAG,MAAMlB,KAAK,CAAE,iDAAgDK,EAAG,EAArD,CAAhC;;AAEA,MAAGa,YAAY,CAACL,IAAb,CAAkB,CAAlB,EAAqBP,OAArB,KAAiCA,OAApC,EAA6C;AAC3CH,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACO,MAAAA,EAAE,EAAE;AAAL,KAAT;AACD;;AAEDnB,EAAAA,KAAK,CACF,yCAAwCoB,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAyB,cAAaZ,EAAG,EAD/E,EAEH,EAFG,CAAL,CAGIK,IAHJ,CAGS,MAAM;AACXP,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACU,MAAAA,EAAE,EAAE;AAAL,KAAT;AACD,GALH,EAKKR,KALL,CAKWC,GAAG,IAAI;AACdZ,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACG,MAAAA;AAAD,KAAT;AACD,GAPH;AAQD,CAlBD;AAoBA;;AACAlB,MAAM,CAAC0B,GAAP,CAAW,OAAX,EAAoBxB,iBAApB,EAAuC,UAASG,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9D,QAAM;AAAEC,IAAAA,EAAF;AAAMY,IAAAA;AAAN,MAAmBf,GAAG,CAACO,IAA7B;AACA,QAAM;AAAEJ,IAAAA,EAAE,EAAEC;AAAN,MAAkBJ,GAAG,CAACK,IAA5B;AAEAP,EAAAA,KAAK,CACF,gDAA+CM,OAAQ,EADrD,EAEH,EAFG,CAAL,CAGII,IAHJ,CAGSC,aAAa,IAAI;AACtBR,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACY,MAAAA,QAAQ,EAAEb,aAAa,CAACE;AAAzB,KAAT;AACD,GALH,EAKKC,KALL,CAKWC,GAAG,IAAI;AACdZ,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAACG,MAAAA;AAAD,KAAT;AACD,GAPH;AAQD,CAZD;AAcAU,MAAM,CAACC,OAAP,GAAiB7B,MAAjB",
      "sourceRoot": "/home/alexis/perso/apiEasyooking/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\nconst { authenticateToken } = require('../middlewares/authentication.js');\nconst { query } = require('../query/query.js');\n\n/* Create new session. */\nrouter.post('/', authenticateToken, function(req, res, next) {\n  const { id: user_id } = req.user;\n  const { name } = req.body;\n  \n  query(\n    `INSERT INTO public.\"Session\"(name, settings, user_id) values ('${name}', '{}', ${user_id}) RETURNING id`,\n    []\n    ).then(queryResponse => {\n      res.json({id: queryResponse.rows[0].id});\n    }).catch(err => {\n      res.json({err});\n    })\n});\n\n/* Update a session. */\nrouter.put('/', authenticateToken, async function(req, res, next) {\n  const { id, settings } = req.body;\n  const { id: user_id } = req.user;\n  \n  const sessionOwner = await query(`select user_id from public.\"Session\" where id=${id}`);\n\n  if(sessionOwner.rows[0].user_id !== user_id) {\n    res.json({ko: 'notSessionOwner'});\n  }\n\n  query(\n    `UPDATE public.\"Session\" SET settings='${JSON.stringify(settings)}' where id=${id}`,\n    []\n    ).then(() => {\n      res.json({ok: true});\n    }).catch(err => {\n      res.json({err});\n    })\n});\n\n/* Get my sessions. */\nrouter.get('/list', authenticateToken, function(req, res, next) {\n  const { id, settings } = req.body;\n  const { id: user_id } = req.user;\n\n  query(\n    `SELECT * FROM public.\"Session\" WHERE user_id=${user_id}`,\n    []\n    ).then(queryResponse => {\n      res.json({sessions: queryResponse.rows});\n    }).catch(err => {\n      res.json({err});\n    })\n});\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1630166881163
  }
}